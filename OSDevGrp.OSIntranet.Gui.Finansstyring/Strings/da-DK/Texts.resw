<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Konto</value>
  </data>
  <data name="AccountingBalance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="Accountings" xml:space="preserve">
    <value>Regnskabsliste</value>
  </data>
  <data name="AccountName" xml:space="preserve">
    <value>Kontonavn</value>
  </data>
  <data name="AccountNumber" xml:space="preserve">
    <value>Kontonummer</value>
  </data>
  <data name="AccountOverdrawnedWithoutValue" xml:space="preserve">
    <value>{0} er i overtræk.</value>
    <comment>{0} = Kontonavn.</comment>
  </data>
  <data name="AccountOverdrawnedWithValue" xml:space="preserve">
    <value>{0} er i overtræk med {1}.</value>
    <comment>{0} = Kontonavn, {1} = Overtræksbeløb.</comment>
  </data>
  <data name="Accounts" xml:space="preserve">
    <value>Konti</value>
  </data>
  <data name="AddBookkeeping" xml:space="preserve">
    <value>Bogfør</value>
  </data>
  <data name="AddressAccount" xml:space="preserve">
    <value>Adressekonto</value>
  </data>
  <data name="AddressAccounts" xml:space="preserve">
    <value>Adressekonti</value>
  </data>
  <data name="Annex" xml:space="preserve">
    <value>Bilag</value>
  </data>
  <data name="AnnualStatement" xml:space="preserve">
    <value>Årsopgørelse</value>
  </data>
  <data name="Asserts" xml:space="preserve">
    <value>Aktiver</value>
  </data>
  <data name="AssertsTotal" xml:space="preserve">
    <value>Aktiver i alt</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Disponibel</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Saldo</value>
  </data>
  <data name="BankAccount" xml:space="preserve">
    <value>Bankkonto ({0})</value>
    <comment>{0} = Kontonummer.</comment>
  </data>
  <data name="BankAccounts" xml:space="preserve">
    <value>Bankkonti</value>
  </data>
  <data name="Bookkeeped" xml:space="preserve">
    <value>Bogført</value>
  </data>
  <data name="BookkeepedLastMonth" xml:space="preserve">
    <value>Bogført sidste måned</value>
  </data>
  <data name="BookkeepedLastYear" xml:space="preserve">
    <value>Bogført sidste år</value>
  </data>
  <data name="BookkeepedYearToDate" xml:space="preserve">
    <value>Bogført år til dato</value>
  </data>
  <data name="Bookkeeping" xml:space="preserve">
    <value>Bogføring</value>
  </data>
  <data name="Budget" xml:space="preserve">
    <value>Budget</value>
  </data>
  <data name="BudgetAccount" xml:space="preserve">
    <value>Budgetkonto</value>
  </data>
  <data name="BudgetAccounts" xml:space="preserve">
    <value>Budgetkonti</value>
  </data>
  <data name="BudgetLastMonth" xml:space="preserve">
    <value>Budget sidste måned</value>
  </data>
  <data name="BudgetLastYear" xml:space="preserve">
    <value>Budget sidste år</value>
  </data>
  <data name="BudgetYearToDate" xml:space="preserve">
    <value>Budget år til dato</value>
  </data>
  <data name="CachAccount" xml:space="preserve">
    <value>Kontanter ({0})</value>
    <comment>{0} = Kontonummer.</comment>
  </data>
  <data name="Cash" xml:space="preserve">
    <value>Kontanter</value>
  </data>
  <data name="Cause" xml:space="preserve">
    <value>Årsag</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Konfiguration</value>
  </data>
  <data name="Credit" xml:space="preserve">
    <value>Kredit</value>
  </data>
  <data name="Creditor" xml:space="preserve">
    <value>Kreditor</value>
  </data>
  <data name="Creditors" xml:space="preserve">
    <value>Kreditorer</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Dato</value>
  </data>
  <data name="DateGreaterThan" xml:space="preserve">
    <value>Datoen skal ligge før eller være lig med {0}.</value>
    <comment>{0} = Maks. dato.</comment>
  </data>
  <data name="DaysForNews" xml:space="preserve">
    <value>Antal dage, hvor nyheder er aktuel</value>
  </data>
  <data name="Debit" xml:space="preserve">
    <value>Debit</value>
  </data>
  <data name="Debtor" xml:space="preserve">
    <value>Debitor</value>
  </data>
  <data name="Debtors" xml:space="preserve">
    <value>Debitorer</value>
  </data>
  <data name="DecimalLowerThan" xml:space="preserve">
    <value>Værdien skal være større end eller lig med {0}.</value>
    <comment>{0} = Min værdi.</comment>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>Der er opstået et problem</value>
  </data>
  <data name="ExceptionHandler" xml:space="preserve">
    <value>Fejlhåndtering</value>
  </data>
  <data name="Expenses" xml:space="preserve">
    <value>Udgifter</value>
  </data>
  <data name="Experiences" xml:space="preserve">
    <value>Experiences</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Luk</value>
  </data>
  <data name="Household" xml:space="preserve">
    <value>Husholding</value>
  </data>
  <data name="HousingCost" xml:space="preserve">
    <value>Boligomkostninger</value>
  </data>
  <data name="Ignore" xml:space="preserve">
    <value>Ignorer</value>
  </data>
  <data name="Income" xml:space="preserve">
    <value>Indtægter</value>
  </data>
  <data name="Insurances" xml:space="preserve">
    <value>Forsikringer</value>
  </data>
  <data name="InvalidValueForUri" xml:space="preserve">
    <value>'{0}' er ikke en lovlige værdi for en URI.</value>
    <comment>{0} = Værdi.</comment>
  </data>
  <data name="LastYear" xml:space="preserve">
    <value>Sidste år ({0})</value>
    <comment>{0} = Årstal.</comment>
  </data>
  <data name="Liabilities" xml:space="preserve">
    <value>Passiver</value>
  </data>
  <data name="LiabilitiesTotal" xml:space="preserve">
    <value>Passiver i alt</value>
  </data>
  <data name="LoanAccount" xml:space="preserve">
    <value>Lån ({0})</value>
    <comment>{0} = Kontonummer.</comment>
  </data>
  <data name="Loans" xml:space="preserve">
    <value>Lån</value>
  </data>
  <data name="LocaleDataFile" xml:space="preserve">
    <value>Lokal datafil</value>
  </data>
  <data name="MonthlyStatement" xml:space="preserve">
    <value>Månedsopgørelse</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Navn</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>Nyhed</value>
  </data>
  <data name="NewsMultiple" xml:space="preserve">
    <value>Nyheder</value>
  </data>
  <data name="NumberOfAccountingLinesToGet" xml:space="preserve">
    <value>Antal bogføringslinjer, der skal hentes</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Andet</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="PostingWarning" xml:space="preserve">
    <value>Bogføringsadvarsel</value>
  </data>
  <data name="PostingWarnings" xml:space="preserve">
    <value>Bogføringsadvarsler</value>
  </data>
  <data name="PrivacyPolicyHeader" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="PrivacyPolicyText" xml:space="preserve">
    <value>This application does not collect or transmit any user’s personal information, with the exception of technical information included in HTTP requests (such as your IP address). No personal information is used, stored, secured or disclosed by services this application works with.</value>
  </data>
  <data name="PrivateAccounting" xml:space="preserve">
    <value>Personligt regnskab</value>
  </data>
  <data name="SupportingServiceUri" xml:space="preserve">
    <value>Supporterede endpoint for service</value>
  </data>
  <data name="SyncDataFile" xml:space="preserve">
    <value>Lokal datafil til synkronisering</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Tekst</value>
  </data>
  <data name="Vacations" xml:space="preserve">
    <value>Ferie, rejser m.m.</value>
  </data>
  <data name="ValueIsNotDate" xml:space="preserve">
    <value>Værdien er ikke en valid dato eller er ikke korrekt formateret.</value>
  </data>
  <data name="ValueIsNotDecimal" xml:space="preserve">
    <value>Værdien er ikke et valid decimaltal eller er ikke korrekt formateret.</value>
  </data>
  <data name="ValueIsRequiered" xml:space="preserve">
    <value>Værdi er påkrævet og må ikke være tom.</value>
  </data>
  <data name="ValueOutsideInterval" xml:space="preserve">
    <value>Værdien er ikke i intervallet ({0} - {1}).</value>
    <comment>{0} = Min værdi, {1} = Max værdi.</comment>
  </data>
  <data name="Vehicles" xml:space="preserve">
    <value>Køretøjer, transport m.m.</value>
  </data>
  <data name="Wages" xml:space="preserve">
    <value>Lønninger</value>
  </data>
  <data name="YearToDate" xml:space="preserve">
    <value>År til dato ({0})</value>
    <comment>{0} = Årstal.</comment>
  </data>
</root>